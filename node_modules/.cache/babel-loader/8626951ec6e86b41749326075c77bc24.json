{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst NEW_MESSAGE = \"NEW-MESSAGE\";\nlet store = {\n  _state: {\n    profile: {\n      postData: [{\n        names: \"Danny\",\n        id: 0,\n        message: \"Hi, bird, how are you?!\",\n        likeCount: \"15\"\n      }, {\n        names: \"Danny\",\n        id: 1,\n        message: \"Lets fire\",\n        likeCount: \"10\"\n      }]\n    },\n    dialogs: {\n      dialogsData: [{\n        id: 0,\n        name: \"Jimmy\"\n      }, {\n        id: 1,\n        name: \"Bobby\"\n      }, {\n        id: 2,\n        name: \"Tommy\"\n      }, {\n        id: 3,\n        name: \"Katrin\"\n      }, {\n        id: 4,\n        name: \"Victoria\"\n      }],\n      messagesData: [{\n        id: 0,\n        text: \"HI!\"\n      }, {\n        id: 1,\n        text: \"nice\"\n      }, {\n        id: 2,\n        text: \"good\"\n      }, {\n        id: 3,\n        text: \"bye\"\n      }, {\n        id: 4,\n        text: \"lets start\"\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    if (action.type === NEW_MESSAGE) {\n      let newMessage = {\n        messageText: this._state.dialogs.newMessageText\n      };\n\n      if (action.type === ADD_POST) {\n        let newPost = {\n          id: 5,\n          message: this._state.profile.newPostText,\n          likeCount: 0\n        };\n\n        this._state.profile.postData.push(newPost);\n\n        this._state.profile.newPostText = \"\";\n\n        this._callSubscriber(this._state);\n      } else if (action.type === UPDATE_NEW_POST_TEXT) {\n        this._state.profile.newPostText = action.text;\n\n        this._callSubscriber(this._state);\n      }\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text\n});\nexport const newMessageActionCreator = text => ({\n  type: NEW_MESSAGE,\n  text: text\n});\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/home/home/Documents/projects/socialNetwork/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","NEW_MESSAGE","store","_state","profile","postData","names","id","message","likeCount","dialogs","dialogsData","name","messagesData","text","getState","subscribe","observer","_callSubscriber","console","log","dispatch","action","type","newMessage","messageText","newMessageText","newPost","newPostText","push","addPostActionCreator","updateNewPostTextActionCreator","newMessageActionCreator","window"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,OADT;AAEEC,QAAAA,EAAE,EAAE,CAFN;AAGEC,QAAAA,OAAO,EAAE,yBAHX;AAIEC,QAAAA,SAAS,EAAE;AAJb,OADQ,EAOR;AAAEH,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,EAAE,EAAE,CAAtB;AAAyBC,QAAAA,OAAO,EAAE,WAAlC;AAA+CC,QAAAA,SAAS,EAAE;AAA1D,OAPQ;AADH,KADH;AAYNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,CACX;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OADW,EAEX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAFW,EAGX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAHW,EAIX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAJW,EAKX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OALW,CADN;AAQPC,MAAAA,YAAY,EAAE,CACZ;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OADY,EAEZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAFY,EAGZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAHY,EAIZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAJY,EAKZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OALY;AARP;AAZH,GADE;;AA8BVC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKZ,MAAZ;AACD,GAhCS;;AAiCVa,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKC,eAAL,GAAuBD,QAAvB;AACD,GAnCS;;AAoCVC,EAAAA,eAAe,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GAtCS;;AAwCVC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,QAAIA,MAAM,CAACC,IAAP,KAAgBtB,WAApB,EAAiC;AAC/B,UAAIuB,UAAU,GAAG;AACfC,QAAAA,WAAW,EAAE,KAAKtB,MAAL,CAAYO,OAAZ,CAAoBgB;AADlB,OAAjB;;AAGA,UAAIJ,MAAM,CAACC,IAAP,KAAgBxB,QAApB,EAA8B;AAC5B,YAAI4B,OAAO,GAAG;AACZpB,UAAAA,EAAE,EAAE,CADQ;AAEZC,UAAAA,OAAO,EAAE,KAAKL,MAAL,CAAYC,OAAZ,CAAoBwB,WAFjB;AAGZnB,UAAAA,SAAS,EAAE;AAHC,SAAd;;AAMA,aAAKN,MAAL,CAAYC,OAAZ,CAAoBC,QAApB,CAA6BwB,IAA7B,CAAkCF,OAAlC;;AACA,aAAKxB,MAAL,CAAYC,OAAZ,CAAoBwB,WAApB,GAAkC,EAAlC;;AACA,aAAKV,eAAL,CAAqB,KAAKf,MAA1B;AACD,OAVD,MAUO,IAAImB,MAAM,CAACC,IAAP,KAAgBvB,oBAApB,EAA0C;AAC/C,aAAKG,MAAL,CAAYC,OAAZ,CAAoBwB,WAApB,GAAkCN,MAAM,CAACR,IAAzC;;AACA,aAAKI,eAAL,CAAqB,KAAKf,MAA1B;AACD;AACF;AACF;;AA5DS,CAAZ;AA+DA,OAAO,MAAM2B,oBAAoB,GAAG,OAAO;AAAEP,EAAAA,IAAI,EAAExB;AAAR,CAAP,CAA7B;AAEP,OAAO,MAAMgC,8BAA8B,GAAIjB,IAAD,KAAW;AACvDS,EAAAA,IAAI,EAAEvB,oBADiD;AAEvDc,EAAAA,IAAI,EAAEA;AAFiD,CAAX,CAAvC;AAKP,OAAO,MAAMkB,uBAAuB,GAAIlB,IAAD,KAAW;AAChDS,EAAAA,IAAI,EAAEtB,WAD0C;AAEhDa,EAAAA,IAAI,EAAEA;AAF0C,CAAX,CAAhC;AAKP,eAAeZ,KAAf;AACA+B,MAAM,CAAC/B,KAAP,GAAeA,KAAf","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst NEW_MESSAGE = \"NEW-MESSAGE\";\n\nlet store = {\n  _state: {\n    profile: {\n      postData: [\n        {\n          names: \"Danny\",\n          id: 0,\n          message: \"Hi, bird, how are you?!\",\n          likeCount: \"15\",\n        },\n        { names: \"Danny\", id: 1, message: \"Lets fire\", likeCount: \"10\" },\n      ],\n    },\n    dialogs: {\n      dialogsData: [\n        { id: 0, name: \"Jimmy\" },\n        { id: 1, name: \"Bobby\" },\n        { id: 2, name: \"Tommy\" },\n        { id: 3, name: \"Katrin\" },\n        { id: 4, name: \"Victoria\" },\n      ],\n      messagesData: [\n        { id: 0, text: \"HI!\" },\n        { id: 1, text: \"nice\" },\n        { id: 2, text: \"good\" },\n        { id: 3, text: \"bye\" },\n        { id: 4, text: \"lets start\" },\n      ],\n    },\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    if (action.type === NEW_MESSAGE) {\n      let newMessage = {\n        messageText: this._state.dialogs.newMessageText,\n      };\n      if (action.type === ADD_POST) {\n        let newPost = {\n          id: 5,\n          message: this._state.profile.newPostText,\n          likeCount: 0,\n        };\n\n        this._state.profile.postData.push(newPost);\n        this._state.profile.newPostText = \"\";\n        this._callSubscriber(this._state);\n      } else if (action.type === UPDATE_NEW_POST_TEXT) {\n        this._state.profile.newPostText = action.text;\n        this._callSubscriber(this._state);\n      }\n    }\n  },\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\n\nexport const updateNewPostTextActionCreator = (text) => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text,\n});\n\nexport const newMessageActionCreator = (text) => ({\n  type: NEW_MESSAGE,\n  text: text,\n});\n\nexport default store;\nwindow.store = store;\n"]},"metadata":{},"sourceType":"module"}