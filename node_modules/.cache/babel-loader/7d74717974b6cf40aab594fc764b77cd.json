{"ast":null,"code":"import profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nlet store = {\n  _state: {\n    profile: {\n      postData: [{\n        names: \"Danny\",\n        id: 0,\n        message: \"Hi, bird, how are you?!\",\n        likeCount: \"15\"\n      }, {\n        names: \"Danny\",\n        id: 1,\n        message: \"Lets fire\",\n        likeCount: \"10\"\n      }]\n    },\n    dialogs: {\n      dialogsData: [{\n        id: 0,\n        name: \"Jimmy\"\n      }, {\n        id: 1,\n        name: \"Bobby\"\n      }, {\n        id: 2,\n        name: \"Tommy\"\n      }, {\n        id: 3,\n        name: \"Katrin\"\n      }, {\n        id: 4,\n        name: \"Victoria\"\n      }],\n      messagesData: [{\n        id: 0,\n        text: \"HI!\"\n      }, {\n        id: 1,\n        text: \"nice\"\n      }, {\n        id: 2,\n        text: \"good\"\n      }, {\n        id: 3,\n        text: \"bye\"\n      }, {\n        id: 4,\n        text: \"lets start\"\n      }],\n      newMessageBody: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    this._state.profile = profileReducer(this._state.profile, action);\n    this._state.dialogs = dialogsReducer(this._state.dialogs, action);\n    this._state.sidebar = sidebarReducer(this._state.sidebar, action);\n\n    this._callSubscriber(this._state);\n  }\n\n};\nexport default store;\nwindow.store = store; // store - OOP","map":{"version":3,"sources":["/home/home/Documents/projects/socialNetwork/src/redux/store.js"],"names":["profileReducer","dialogsReducer","sidebarReducer","store","_state","profile","postData","names","id","message","likeCount","dialogs","dialogsData","name","messagesData","text","newMessageBody","getState","subscribe","observer","_callSubscriber","console","log","dispatch","action","sidebar","window"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,OADT;AAEEC,QAAAA,EAAE,EAAE,CAFN;AAGEC,QAAAA,OAAO,EAAE,yBAHX;AAIEC,QAAAA,SAAS,EAAE;AAJb,OADQ,EAOR;AAAEH,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,EAAE,EAAE,CAAtB;AAAyBC,QAAAA,OAAO,EAAE,WAAlC;AAA+CC,QAAAA,SAAS,EAAE;AAA1D,OAPQ;AADH,KADH;AAYNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,CACX;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OADW,EAEX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAFW,EAGX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAHW,EAIX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAJW,EAKX;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OALW,CADN;AAQPC,MAAAA,YAAY,EAAE,CACZ;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OADY,EAEZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAFY,EAGZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAHY,EAIZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAJY,EAKZ;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OALY,CARP;AAePC,MAAAA,cAAc,EAAE;AAfT;AAZH,GADE;;AA+BVC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKb,MAAZ;AACD,GAjCS;;AAkCVc,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClB,SAAKC,eAAL,GAAuBD,QAAvB;AACD,GApCS;;AAqCVC,EAAAA,eAAe,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GAvCS;;AAyCVC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,SAAKpB,MAAL,CAAYC,OAAZ,GAAsBL,cAAc,CAAC,KAAKI,MAAL,CAAYC,OAAb,EAAsBmB,MAAtB,CAApC;AACA,SAAKpB,MAAL,CAAYO,OAAZ,GAAsBV,cAAc,CAAC,KAAKG,MAAL,CAAYO,OAAb,EAAsBa,MAAtB,CAApC;AACA,SAAKpB,MAAL,CAAYqB,OAAZ,GAAsBvB,cAAc,CAAC,KAAKE,MAAL,CAAYqB,OAAb,EAAsBD,MAAtB,CAApC;;AAEA,SAAKJ,eAAL,CAAqB,KAAKhB,MAA1B;AACD;;AA/CS,CAAZ;AAkDA,eAAeD,KAAf;AACAuB,MAAM,CAACvB,KAAP,GAAeA,KAAf,C,CACA","sourcesContent":["import profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nlet store = {\n  _state: {\n    profile: {\n      postData: [\n        {\n          names: \"Danny\",\n          id: 0,\n          message: \"Hi, bird, how are you?!\",\n          likeCount: \"15\",\n        },\n        { names: \"Danny\", id: 1, message: \"Lets fire\", likeCount: \"10\" },\n      ],\n    },\n    dialogs: {\n      dialogsData: [\n        { id: 0, name: \"Jimmy\" },\n        { id: 1, name: \"Bobby\" },\n        { id: 2, name: \"Tommy\" },\n        { id: 3, name: \"Katrin\" },\n        { id: 4, name: \"Victoria\" },\n      ],\n      messagesData: [\n        { id: 0, text: \"HI!\" },\n        { id: 1, text: \"nice\" },\n        { id: 2, text: \"good\" },\n        { id: 3, text: \"bye\" },\n        { id: 4, text: \"lets start\" },\n      ],\n      newMessageBody: \"\",\n    },\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    this._state.profile = profileReducer(this._state.profile, action);\n    this._state.dialogs = dialogsReducer(this._state.dialogs, action);\n    this._state.sidebar = sidebarReducer(this._state.sidebar, action);\n\n    this._callSubscriber(this._state);\n  },\n};\n\nexport default store;\nwindow.store = store;\n// store - OOP\n"]},"metadata":{},"sourceType":"module"}