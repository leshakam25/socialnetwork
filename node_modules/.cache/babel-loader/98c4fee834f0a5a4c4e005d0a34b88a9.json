{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\nlet store = {\n  _state: {\n    profile: {\n      postData: [{\n        names: \"Danny\",\n        id: 0,\n        message: \"Hi, bird, how are you?!\",\n        likeCount: \"15\"\n      }, {\n        names: \"Danny\",\n        id: 1,\n        message: \"Lets fire\",\n        likeCount: \"10\"\n      }]\n    },\n    dialogs: {\n      dialogsData: [{\n        id: 0,\n        name: \"Jimmy\"\n      }, {\n        id: 1,\n        name: \"Bobby\"\n      }, {\n        id: 2,\n        name: \"Tommy\"\n      }, {\n        id: 3,\n        name: \"Katrin\"\n      }, {\n        id: 4,\n        name: \"Victoria\"\n      }],\n      messagesData: [{\n        id: 0,\n        text: \"HI!\"\n      }, {\n        id: 1,\n        text: \"nice\"\n      }, {\n        id: 2,\n        text: \"good\"\n      }, {\n        id: 3,\n        text: \"bye\"\n      }, {\n        id: 4,\n        text: \"lets start\"\n      }],\n      newMessageBody: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    this._state.profile = profileReducer(this._state.profile, action);\n    this._state.dialogs = profileReducer(this._state.dialogs, action);\n    this._state.sideBar = profileReducer(this._state.sideBar, action);\n\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profile.newPostText,\n        likeCount: 0\n      };\n\n      this._state.profile.postData.push(newPost);\n\n      this._state.profile.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profile.newPostText = action.text;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogs.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogs.newMessageBody;\n      this._state.dialogs.newMessageBody = \"\";\n\n      this._state.dialogs.messagesData.push({\n        id: this._state.dialogs.messagesData.length + 1,\n        text: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: text\n});\nexport default store;\nwindow.store = store; // store - OOP","map":{"version":3,"sources":["/home/home/Documents/projects/socialNetwork/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profile","postData","names","id","message","likeCount","dialogs","dialogsData","name","messagesData","text","newMessageBody","getState","subscribe","observer","_callSubscriber","console","log","dispatch","action","profileReducer","sideBar","type","newPost","newPostText","push","body","length","addPostActionCreator","updateNewPostTextActionCreator","sendMessageCreator","updateNewMessageBodyCreator","window"],"mappings":"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","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nlet store = {\n  _state: {\n    profile: {\n      postData: [\n        {\n          names: \"Danny\",\n          id: 0,\n          message: \"Hi, bird, how are you?!\",\n          likeCount: \"15\",\n        },\n        { names: \"Danny\", id: 1, message: \"Lets fire\", likeCount: \"10\" },\n      ],\n    },\n    dialogs: {\n      dialogsData: [\n        { id: 0, name: \"Jimmy\" },\n        { id: 1, name: \"Bobby\" },\n        { id: 2, name: \"Tommy\" },\n        { id: 3, name: \"Katrin\" },\n        { id: 4, name: \"Victoria\" },\n      ],\n      messagesData: [\n        { id: 0, text: \"HI!\" },\n        { id: 1, text: \"nice\" },\n        { id: 2, text: \"good\" },\n        { id: 3, text: \"bye\" },\n        { id: 4, text: \"lets start\" },\n      ],\n      newMessageBody: \"\",\n    },\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  _callSubscriber() {\n    console.log(\"state changed\");\n  },\n\n  dispatch(action) {\n    this._state.profile = profileReducer(this._state.profile, action);\n    this._state.dialogs = profileReducer(this._state.dialogs, action);\n    this._state.sideBar = profileReducer(this._state.sideBar, action);\n\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profile.newPostText,\n        likeCount: 0,\n      };\n      this._state.profile.postData.push(newPost);\n      this._state.profile.newPostText = \"\";\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profile.newPostText = action.text;\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogs.newMessageBody = action.body;\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogs.newMessageBody;\n      this._state.dialogs.newMessageBody = \"\";\n      this._state.dialogs.messagesData.push({\n        id: this._state.dialogs.messagesData.length + 1,\n        text: body,\n      });\n      this._callSubscriber(this._state);\n    }\n  },\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) => ({\n  type: UPDATE_NEW_POST_TEXT,\n  text: text,\n});\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageBodyCreator = (text) => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: text,\n});\n\nexport default store;\nwindow.store = store;\n// store - OOP\n"]},"metadata":{},"sourceType":"module"}